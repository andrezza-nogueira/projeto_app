package AGENDAMENTO;

import PRINCIPAL.PRINCIPAL;
import UTILIDA.CONEXAO;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andrezza
 */
public class LocalizaAgendamento extends javax.swing.JDialog {
    CONEXAO CONEXAO = new CONEXAO();
    String MesPesq = "";
    String AnoPesq = "";
    public String CODPES, NOMEPES, ANOPES, SERVPES, OBSPES, DIAPES, MESPES, HORAPES;
    String CodigoVetor[];
    
    /**
     * Creates new form LocalizaAgendamento
     * @param parent
     * @param modal
     */
    public LocalizaAgendamento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        SimpleDateFormat AnoF = new SimpleDateFormat("yyyy");
        SimpleDateFormat MesF = new SimpleDateFormat("MM");
        Mes.setText(MesF.format(new Date()));
        Ano.setText(AnoF.format(new Date()));
        CONEXAO.conecta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaAgendamento = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        Lnome = new javax.swing.JLabel();
        Lmes = new javax.swing.JLabel();
        Lano = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        Ano = new javax.swing.JTextField();
        Mes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setOpaque(true);

        TabelaAgendamento.setAutoCreateRowSorter(true);
        TabelaAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Serviço", "Observação", "Data "
            }
        ));
        TabelaAgendamento.setFocusable(false);
        TabelaAgendamento.setGridColor(new java.awt.Color(255, 255, 255));
        TabelaAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaAgendamento);

        jLayeredPane1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 110, 440, 170);
        jLayeredPane1.add(jSeparator2);
        jSeparator2.setBounds(10, 60, 300, 10);
        jLayeredPane1.add(jSeparator3);
        jSeparator3.setBounds(220, 90, 90, 10);
        jLayeredPane1.add(jSeparator4);
        jSeparator4.setBounds(10, 90, 90, 10);

        Lnome.setText("Nome:");
        jLayeredPane1.add(Lnome);
        Lnome.setBounds(10, 40, 40, 20);

        Lmes.setText("Mes:");
        jLayeredPane1.add(Lmes);
        Lmes.setBounds(10, 70, 30, 20);

        Lano.setText("Ano:");
        jLayeredPane1.add(Lano);
        Lano.setBounds(220, 70, 30, 20);

        nome.setBorder(null);
        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });
        nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeKeyReleased(evt);
            }
        });
        jLayeredPane1.add(nome);
        nome.setBounds(50, 40, 260, 20);

        Ano.setBorder(null);
        Ano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnoActionPerformed(evt);
            }
        });
        jLayeredPane1.add(Ano);
        Ano.setBounds(250, 70, 60, 20);

        Mes.setBorder(null);
        Mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MesActionPerformed(evt);
            }
        });
        jLayeredPane1.add(Mes);
        Mes.setBounds(40, 70, 60, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGEM/logo.png"))); // NOI18N
        jLayeredPane1.add(jLabel1);
        jLabel1.setBounds(340, 10, 110, 90);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TabelaAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaAgendamentoMouseClicked
        try {
            MOSTRA_DADOS_TABELA();
            AGENDAMENTO dialog = new AGENDAMENTO(new javax.swing.JFrame(), true);
            dialog.MostraAgendaPesquisa(this);
        } catch (Exception err) {
            System.out.println(err);
        }
    }//GEN-LAST:event_TabelaAgendamentoMouseClicked

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed

    }//GEN-LAST:event_nomeActionPerformed

    private void nomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeKeyReleased
        try {
            int m = Mes.getText().length();
            int a = Ano.getText().length();
            if (m > 0){
                MesPesq = " and mes = '" + Mes.getText() + "' ";
            } else {
                MesPesq = "";
            } if (a > 0){
                AnoPesq = " and ano = '" + Ano.getText() + "' ";
            } else {
                AnoPesq = "";
            } 
            PESQUISANOME();
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_nomeKeyReleased

    private void MesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MesActionPerformed
        try {
            int m = Mes.getText().length();
            int a = Ano.getText().length();
            if (m > 0){
                MesPesq = " and mes = '" + Mes.getText() + "' ";
            } else {
                MesPesq = "";
            } if (a > 0){
                AnoPesq = " and ano = '" + Ano.getText() + "' ";
            } else {
                AnoPesq = "";
            } 
            PESQUISANOME();
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_MesActionPerformed

    private void AnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnoActionPerformed
        try {
            int m = Mes.getText().length();
            int a = Ano.getText().length();
            if (m > 0){
                MesPesq = " and mes = '" + Mes.getText() + "' ";
            } else {
                MesPesq = "";
            } if (a > 0){
                AnoPesq = " and ano = '" + Ano.getText() + "' ";
            } else {
                AnoPesq = "";
            } 
            PESQUISANOME();
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_AnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocalizaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocalizaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocalizaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocalizaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LocalizaAgendamento dialog = new LocalizaAgendamento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ano;
    private javax.swing.JLabel Lano;
    private javax.swing.JLabel Lmes;
    private javax.swing.JLabel Lnome;
    private javax.swing.JTextField Mes;
    private javax.swing.JTable TabelaAgendamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField nome;
    // End of variables declaration//GEN-END:variables

public PRINCIPAL ECRAPRIN; 
     
public void MostraPesquisaAgenda(PRINCIPAL MostraAgenda){
    this.ECRAPRIN = MostraAgenda;
    setVisible(true);
    }           

public void PESQUISANOME() {
        try{

            CONEXAO.executaSQL(" SELECT Count(cod)as Total FROM agenda where nome like '" + nome.getText() + "%' " + MesPesq + AnoPesq + " ");
            CONEXAO.resultset.first();
            int Total = Integer.parseInt(CONEXAO.resultset.getString("Total"));
            CodigoVetor = new String[Total+1];

            CONEXAO.executaSQL("select * from agenda where nome like '" + nome.getText() + "%' " + MesPesq + AnoPesq + " order by nome ");
            PREENCHE_TABELA();
        } catch (Exception err) {
            System.out.println(err);
        }
    }

public void PREENCHE_TABELA() {
    TabelaAgendamento.getColumnModel().getColumn(0).setPreferredWidth(175);
    TabelaAgendamento.getColumnModel().getColumn(1).setPreferredWidth(250);
    TabelaAgendamento.getColumnModel().getColumn(2).setPreferredWidth(350);
    TabelaAgendamento.getColumnModel().getColumn(3).setPreferredWidth(225);
    
    DefaultTableModel modelo = (DefaultTableModel) TabelaAgendamento.getModel();
    modelo.setNumRows(0);
    int Posicao = 0;
    
    try {
        while (CONEXAO.resultset.next()) {
            CodigoVetor[Posicao] = CONEXAO.resultset.getString("cod");
            int dia = Integer.parseInt(CONEXAO.resultset.getString("dia"));
            int mes = Integer.parseInt(CONEXAO.resultset.getString("mes"));
            int ano = Integer.parseInt(CONEXAO.resultset.getString("ano"));
            String d = "";
            String m = "";
            if (dia < 10) {
                d = "0";
            }
            if (mes < 10) {
                m = "0";
            }
            
            modelo.addRow(new Object[] {CONEXAO.resultset.getString("nome"),
                        CONEXAO.resultset.getString("servico"),
                        CONEXAO.resultset.getString("observacao"),
                        d + dia + "/" + m + mes + "/" + ano + "   " + CONEXAO.resultset.getString("hora")
                        });
                        Posicao++;
        }
    } catch (SQLException erro) {
        JOptionPane.showMessageDialog(null, "Erro na tabela");
    }
    }

public void MOSTRA_DADOS_TABELA() {
        try {
            int Linha = TabelaAgendamento.getSelectedRow();
            CONEXAO.executaSQL("select * from agenda where cod = '"+CodigoVetor[Linha]+ "'");
            CONEXAO.resultset.first();
            
            CODPES = (CONEXAO.resultset.getString("cod"));
            NOMEPES = (CONEXAO.resultset.getString("nome"));
            SERVPES = (CONEXAO.resultset.getString("servico"));
            OBSPES = (CONEXAO.resultset.getString("observacao"));
            int dia = Integer.parseInt(CONEXAO.resultset.getString("dia"));
            int mes = Integer.parseInt(CONEXAO.resultset.getString("mes"));
            int ano = Integer.parseInt(CONEXAO.resultset.getString("ano"));
            String d = "";
            String m = "";
            
            if (dia < 10) {
                d = "0";
            }
            if (mes < 10) {
                m = "0";
        }
        DIAPES = d + dia;
        MESPES = m + mes;
        ANOPES =  "" + ano;
        HORAPES = (CONEXAO.resultset.getString("hora"))
;            
        } catch (SQLException erro) {
        JOptionPane.showMessageDialog(null, "Erro" + erro);
        }
    }
}
